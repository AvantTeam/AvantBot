plugins {
    id 'java'
    id 'java-library'
}

sourceSets.main {
    java.srcDirs = ['src/'];
    resources.srcDirs = ['resources/'];
}

repositories {
    jcenter()
}

dependencies {
    api "org.slf4j:slf4j-api:$slf4jVersion"
    api "org.slf4j:slf4j-log4j12:$slf4jVersion"

    api "net.dv8tion:JDA:$jdaVersion"
    api "com.fasterxml.jackson.core:jackson-databind:$jsonVersion"
}

version = '1.0-SNAPSHOT'
group = 'com.github.avant'

ext {
    mainClass = 'bot.AvantBot'
}

task deploy(type: Jar) {
    archiveFileName = 'AvantBot.jar'

    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from configurations.runtimeClasspath.collect {
        it.isDirectory() || !it.name.endsWithAny('.zip', '.jar')
        ?   it
        :   zipTree(it)
    }

    manifest {
        attributes 'Main-Class': project.mainClass
    }
}

task run(type: JavaExec, dependsOn: classes) {
    main = project.mainClass
    workingDir = "$rootDir/resources"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in

    if(project.hasProperty('bot.token')) {
        systemProperty 'bot.token', project.getProperty('bot.token')
    }

    if(project.hasProperty('bot.creator')) {
        systemProperty 'bot.creator', project.getProperty('bot.creator')
    }
}

task stage { doFirst {
    exec {
        workingDir rootDir
        commandLine './run'
    }
}}

tasks.withType(JavaCompile) {
    targetCompatibility = 15
    sourceCompatibility = 15

    options.fork = true
    options.encoding 'UTF-8'
    options.compilerArgs += '--enable-preview'
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}
